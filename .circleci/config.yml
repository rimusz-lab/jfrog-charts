version: 2
jobs:
  lint-scripts:
    docker:
      - image: koalaman/shellcheck-alpine
    steps:
      - checkout
      - run:
          name: lint
          command: |
            shellcheck -x test/e2e-docker4mac.sh
            shellcheck -x test/e2e-gke.sh
            shellcheck -x test/e2e-local-gke.sh
            shellcheck -x test/lint-charts.sh
  lint-charts:
    docker:
      - image: gcr.io/kubernetes-charts-ci/chart-testing:v1.1.0
    steps:
      - checkout
      - run:
          name: lint
          command: |
            git remote add k8s https://github.com/rimusz/jfrog-charts
            git fetch k8s master
            chart_test.sh --config test/.testenv --no-install
  install-charts:
    machine: true
    environment:
      CHANGE_MINIKUBE_NONE_USER: true
      K8S_VERSION: v1.10.0
      MINIKUBE_VERSION: v0.28.2
    steps:
      - checkout
      - run:
          name: setup kubectl
          command: |
            curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${K8S_VERSION}/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
      - run:
          name: setup minikube
          command: |
            curl -Lo minikube https://github.com/kubernetes/minikube/releases/download/${MINIKUBE_VERSION}/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
      - run:
          name: setup helm
          command: |
            curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get | bash
      - run:
          command: |
            # TODO: remove the --bootstrapper flag once this issue is solved: https://github.com/kubernetes/minikube/issues/2704
            sudo minikube config set WantReportErrorPrompt false
            sudo -E minikube start --vm-driver=none --bootstrapper=localkube --kubernetes-version=${K8S_VERSION} --extra-config=apiserver.Authorization.Mode=RBAC
      # - run:
      #     command: |
      #       sudo minikube update-context
      - run:
          command: |
            JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until sudo kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done
      - run:
          command: |
            sudo kubectl cluster-info
      - run:
          command: |
            sudo kubectl run circleci-example --image=nginx
      - run:
          command: |
            sudo kubectl get deployment
      - run:
          command: |
            sudo helm init
      - run:
          command: |
            sudo helm version -c
      - run:
          name: clone charts
          command: |
            git clone https://github.com/rimusz/jfrog-charts.git
      - run:
          name: testing
          command: |
            docker run --rm -v "$(pwd):/stable" --workdir /stable -e CHART_DIRS=stable gcr.io/kubernetes-charts-ci/chart-testing:v1.1.0 chart_test.sh

workflows:
  version: 2
  lint:
    jobs:
      - lint-scripts
      - lint-charts
  install:
    jobs:
      - install-charts
